
s# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/hackathon?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA and Hibernate configuration
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.mvc.hiddenmethod.filter.enabled=true

# Server configuration (if needed)
server.port=8080

#Oauth2 configure
spring.security.oauth2.client.registration.google.client-id= 208032331770-icuq7qqvk5l1s5jmgfg577cqomimvbj.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret= J2RmtWk0JqxVM-taGSZRtLS4


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
#paytm
# paytm.payment.sandbox.merchantId:
# paytm.payment.sandbox.merchantKey: 
# paytm.payment.sandbox.channelId:WEB
# paytm.payment.sandbox.industryTypeId:Retail
# paytm.payment.sandbox.website:WEBSTAGING
# paytm.payment.sandbox.paytmUrl:https://securegw-stage.paytm.in/order/process
# paytm.payment.sandbox.callbackUrl:http://localhost:8080/pgresponse
# paytm.payment.sandbox.details.MID: ${paytm.payment.sandbox.merchantId}
# paytm.payment.sandbox.details.CHANNEL_ID: ${paytm.payment.sandbox.channelId}
# paytm.payment.sandbox.details.INDUSTRY_TYPE_ID: ${paytm.payment.sandbox.industryTypeId}
# paytm.payment.sandbox.details.WEBSITE: ${paytm.payment.sandbox.website}
# paytm.payment.sandbox.details.CALLBACK_URL: ${paytm.payment.sandbox.callbackUrl}
# paytm.mobile = 
# paytm.email = 